@page "/Sample06"

@using BlazorApp1.Data
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid

@inject IDbContextFactory<PubsDbContext> DbFactory

<h3>Sample06 : スタイリング</h3>

@if (authors == null)
{
    <div>データロード中…</div>
}
else
{
    <div>
        <QuickGrid Items="@authors" Pagination="@paginationState">
            <PropertyColumn Property="@(a => a.AuthorId)" Title="著者ID"></PropertyColumn>
            <TemplateColumn 
                Title="著者名"
                Sortable="true"
                SortBy="@(GridSort<Author>.ByAscending(a => a.AuthorFirstName).ThenAscending(a => a.AuthorLastName))"
            >
                @(context.AuthorFirstName) @(context.AuthorLastName)
            </TemplateColumn>
            <PropertyColumn Property="@(a => a.AuthorLastName)" Title="著者(姓)"></PropertyColumn>
            <PropertyColumn Property="@(a => a.Phone)" Title="電話番号"></PropertyColumn>
            <PropertyColumn Property="@(a => a.State)" Title="州"></PropertyColumn>
            <TemplateColumn>
                <input type="checkbox" disabled value="@(context.Contract)" />
                @(context.Contract ? "契約あり" : "契約なし")
            </TemplateColumn>
        </QuickGrid>
        <Paginator State="@paginationState"></Paginator>
    </div>
}

@code {
    private IQueryable<Author>? authors = null;

    private readonly PaginationState paginationState = new() { ItemsPerPage = 10 };

    protected override async Task OnInitializedAsync()
    {
        await using (var pubs = await DbFactory.CreateDbContextAsync())
        {
            authors = (await pubs.Authors.ToListAsync()).AsQueryable();
        }
    }
}