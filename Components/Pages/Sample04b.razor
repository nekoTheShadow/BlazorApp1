@page "/Sample04b"

@using BlazorApp1.Data
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid

@inject IDbContextFactory<PubsDbContext> DbFactory

<h3>Sample04b : （参考）大量ページング（仮想化）</h3>

<div class="grid" tabindex="-1">
    <QuickGrid ItemsProvider="@ItemsProvider" Virtualize="true" ItemSize="5">
        <PropertyColumn Property="@(a => a.AuthorId)" Title="著者ID"></PropertyColumn>
        <TemplateColumn Title="著者名"
                        Sortable="true"
                        SortBy="@(GridSort<Author>.ByAscending(a => a.AuthorFirstName).ThenAscending(a => a.AuthorLastName))">
            @(context.AuthorFirstName) @(context.AuthorLastName)
        </TemplateColumn>
        <PropertyColumn Property="@(a => a.AuthorLastName)" Title="著者(姓)"></PropertyColumn>
        <PropertyColumn Property="@(a => a.Phone)" Title="電話番号"></PropertyColumn>
        <PropertyColumn Property="@(a => a.State)" Title="州"></PropertyColumn>
        <TemplateColumn>
            <input type="checkbox" disabled value="@(context.Contract)" />
            @(context.Contract ? "契約あり" : "契約なし")
        </TemplateColumn>
    </QuickGrid>
</div>
<p>@LogMessage</p>

@code {
    private string? LogMessage { get; set; }

    private GridItemsProvider<Author>? ItemsProvider { get; set; }

    protected override void OnInitialized()
    {
        ItemsProvider = async request =>
        {
            LogMessage += "(" + request.StartIndex + " " + request.Count + ") ";
            StateHasChanged();
            await using (var pubs = await DbFactory.CreateDbContextAsync())
            {
                var data = await pubs.Authors.Skip(request.StartIndex).Take(request.Count ?? 0).ToListAsync();
                var totalCount = await pubs.Authors.CountAsync();
                return GridItemsProviderResult.From(data, totalCount);
            }
        };
    }
}